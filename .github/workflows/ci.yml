name: CI

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.16.0'

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DTINAXLSX_BUILD_SHARED=OFF \
          -DTINAXLSX_BUILD_EXAMPLES=OFF \
          -DTINAXLSX_BUILD_TESTS=ON \
          -DTINAXLSX_ENABLE_PERFORMANCE=ON

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      run: ctest --build-config ${{ matrix.build_type }} --output-on-failure

  # 代码质量检查
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Check line endings
      run: |
        ! find . -name "*.cpp" -o -name "*.hpp" -o -name "*.h" -o -name "*.c" | xargs file | grep CRLF

    - name: Check for tabs
      run: |
        ! find . -name "*.cpp" -o -name "*.hpp" -o -name "*.h" -o -name "*.c" | xargs grep -l $'\t'

    - name: Check file permissions
      run: |
        find . -name "*.cpp" -o -name "*.hpp" -o -name "*.h" -o -name "*.c" | xargs ls -la | awk '{if($1 ~ /x/) print $9 " is executable"}' | grep -v "^$" && exit 1 || exit 0 