/**

@page faq Frequently Asked Questions

@tableofcontents

The section outlines some answers to some frequently asked questions.


@section faq_template Q. Can Libxlsxwriter use an existing Excel file as a template?

No.

Libxlsxwriter is designed only as a file *writer*. It cannot read or modify
an existing Excel file.


@section faq_formula_zero Q. Why do my formulas show a zero result in some, non-Excel applications?

Due to a wide range of possible formulas and the inter-dependencies between
them `libxlsxwriter` doesn't, and realistically cannot, calculate the result
of a formula when it is written to an XLSX file. Instead, it stores the value
0 as the formula result. It then sets a global flag in the XLSX file to say
that all formulas and functions should be recalculated when the file is
opened.

This is the method recommended in the Excel documentation and in general it
works fine with spreadsheet applications. However, applications that don't
have a facility to calculate formulas, such as Excel Viewer, or several mobile
applications, will only display the 0 results.

If required, it is also possible to specify the calculated result of the
formula using the worksheet_write_formula_num() function.

@code
    worksheet_write_formula_num(worksheet, 0, 0, "=2 + 2", NULL, 4);
@endcode

@note LibreOffice doesn't recalculate Excel formulas that reference other
cells by default, in which case you will get the default XlsxWriter value of
0. You can work around this by setting the "LibreOffice Preferences ->
LibreOffice Calc -> Formula -> Recalculation on File Load" option to "Always
recalculate" (see the LibreOffice
[documentation](https://help.libreoffice.org/6.4/en-US/text/scalc/01/06080000.html?DbPAR=CALC)). Or,
you can set a blank string result in the formula, which will also force
recalculation:

@code
    worksheet_write_formula_str(worksheet, 0, 0, "=Sheet1!$A$1", NULL, "");
@endcode


@section faq_range_format Q. Can I apply a format to a range of cells in one go?

Currently no. However, it is a planned features to allow cell formats
and data to be written separately.


@section faq_msvc Q. Is Visual C++ on Windows supported?

Yes. See @ref gsg_vcpkg.


@section faq_features Q. Is feature X supported or will it be supported?

All supported features are documented. In time the feature set may expand to
include more of the functionality of the [Python
XlsxWriter](https://xlsxwriter.readthedocs.io) module.


@section faq_autofit Q. Is there an "AutoFit" option for columns?

Unfortunately, there is no way to specify "AutoFit" for a column in the
Excel file format. This feature is only available at runtime from within
Excel. It is possible to simulate "AutoFit" by tracking the width of the
data in the column as your write it.


@section faq_faq Q. Do people actually ask these questions frequently, or at all?

Apart from this question, yes.

Next: @ref bugs

*/
